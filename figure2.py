# -*- coding: utf-8 -*-
"""Figure2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Takwim6IDOUFHBlr_4o_8hkKJkmA8kPQ
"""
import sys
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import argparse
import matplotlib.patches as patches

def main():
    #argparse for input mt and wt speeds files
    import os
    parser=argparse.ArgumentParser(description="Input wildtype and mutant speeds files")
    parser.add_argument("name",type=str,help="Name of tissue or cell, with _ inbetween if it contains more than one word",action='store')
    parser.add_argument("wtspeeds",help="Path to wildtype speeds file",action="store")
    parser.add_argument("mtspeeds",help="Path to mutant speeds file",action="store")
    args=parser.parse_args()
  
    if not os.path.isfile(args.wtspeeds):
        print(args.wtspeeds, "is not a correct file path!")
        sys.exit()
    if not os.path.isfile(args.mtspeeds):
        print(args.mtspeeds, "is not a correct file path!")
        sys.exit()


    # Read line of file that is pertinent
    pilra_speeds = pd.read_csv(args.wtspeeds, skiprows=[0],
                           dtype=np.float64, header=None).to_numpy()[0]
    pilra_mutant_speed = pd.read_csv(args.mtspeeds, skiprows=[0],
                                dtype=np.float64, header=None).to_numpy()[0]

    positions = range(1, 294) # for x-axis
    
    # fix name if it has words 
    if "_" in args.name:
        args.name = args.name.replace('_', ' ')

    # Plot the data

    plt.plot(positions, pilra_mutant_speed, 'r', label="rs2405442:T>C Mutant")
    plt.plot(positions, pilra_speeds, 'b', label="ENST00000198536.7 Wildtype")
    plt.plot()
    plt.xlim([0,301]) 
    plt.ylim([0,1.1])
    plt.ylabel('Relative Codon Adaptiveness')
    plt.xlabel('Codon Position')
    
    # writing new name if it contains multiple words
    plt.title('Relative Codon Adaptiveness for ' + args.name)

    plt.annotate('Ramp sequence region', xy=(25,.6),
             xytext=(25, .3), arrowprops=dict(facecolor='black', shrink=0.05))
    plt.legend(loc="lower right")




    fig, ax = plt.subplots() # create a new figure with a default 111 subplot

    ax.plot(positions, pilra_mutant_speed, 'r', label="rs2405442:T>C Mutant")
    ax.plot(positions, pilra_speeds, 'b', label="ENST00000198536.7 Wildtype")
    ax.set_xlim([0,301]) 
    ax.set_ylim([0,1.1])
    x1, x2, y1, y2 = 0, 30, 0.7, 0.95 # specify the limits
    rect = patches.Rectangle((x1, y1), x2, y2-y1, linewidth=1, edgecolor='black', facecolor='none')
    ax.add_patch(rect)
    ax.set_ylabel('Relative Codon Adaptiveness')
    ax.set_xlabel('Codon Position')

    ax.set_title('Relative Codon Adaptiveness for PILRA in '+ args.name)
    ax.annotate('Ramp Sequence Region', xy=(35,.55),
             xytext=(70, .54), fontsize=12, arrowprops=dict(facecolor='black', shrink=0.1, width=2.5, headwidth=9), xycoords='data')
    ax.legend(loc="lower right")


    plt.savefig("outputfigs/" + args.name + ".png")
main()
